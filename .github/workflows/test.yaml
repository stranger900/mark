name: lint-n-sast

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  # schedule:
  #   - cron: '*/1 * * * *' # every 1 min
  #   - cron: '*/3 * * * *' # every 3 min
  #   - cron: '*/5 * * * *' # every 5 min 
  #   - cron: '0 16 1 2 *'  # At 16:00 on day-of-month 1 and on Monday in February

  workflow_dispatch:

jobs:
  test1:
    # if: github.event.schedule != '*/3 * * * *'&&'*/1 * * * *'
    if: github.event.schedule == '*/3 * * * *'
    runs-on: ubuntu-latest
    steps:
      - name: test1
        run: echo "Hello"
        
  test2:
    # if: github.event.schedule != '*/5 * * * *'&&'*/3 * * * *'
    if: github.event.schedule == '*/5 * * * *'
    runs-on: ubuntu-latest
    steps:
      - name: test2
        run: echo "world"

  test3:
    # if: github.event.schedule != '*/1 * * * *'&&'*/5 * * * *'
    if: github.event.schedule == '*/1 * * * *'
    runs-on: ubuntu-latest
    steps:
      - name: test3
        run: echo "test3" 

  # test4:
  #   # if: github.event.schedule == '0 16 1 2 *'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: test4
  #       run: echo "test4"       

  test-report:
    # if: ${{ always() }}
    # needs: [test1, test2, test3, test4]
    runs-on: ubuntu-latest
    steps:
      # - name: Adding markdown
      #   run: |
      #     echo '### Hello  ' >> $GITHUB_STEP_SUMMARY
      #     echo ' world! ' >> $GITHUB_STEP_SUMMARY
      #     echo "1"
      #     echo "$GITHUB_STEP_SUMMARY"
      #     echo "2"
      #     cat $GITHUB_STEP_SUMMARY 
      #   shell: bash

      - name: adding markdown
        run: |
            echo "**CAPACITY**:" >./capacity.md
            echo '```' >>./capacity.md
            echo 'test' >>./capacity.md
            echo '```' >>./capacity.md
            
            cat ./capacity.md
        shell: bash  

      - name: print markdown
        id: capacity_output
        run: |
            cat ./capacity.md  
            # echo "CAPACITY_OUTPUT=$(cat ./capacity.md)" >> "$GITHUB_OUTPUT"
            # echo -e "text<<EOF\n$(cat ./capacity.md)\nEOF" >> "$GITHUB_ENV"
            {
              echo 'MD_RESPONSE<<EOF'
              cat ./capacity.md
              echo EOF
            } >> "$GITHUB_ENV"

      - name: Output
        run: |
            echo "$MD_RESPONSE"
            
